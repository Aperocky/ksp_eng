// IN flight lib mostly pertaining to intra-atmospheric flights on Kerbin.
// lib_navball from KSLib is inspiration to most of this file.

DECLARE FUNCTION TO_UNIT_VECTOR {
  PARAMETER THING.
  IF THING:ISTYPE("VECTOR") {
    RETURN THING:NORMALIZED.
  } ELSE IF THING:ISTYPE("DIRECTION") {
    RETURN THING:FOREVECTOR.
  } ELSE IF THING:ISTYPE("VESSEL") OR THING:ISTYPE("PART") {
    RETURN THING:FACING:FOREVECTOR.
  } ELSE IF THING:ISTYPE("GEOPOSITION") OR THING:ISTYPE("WAYPOINT") {
    RETURN THING:POSITION:NORMALIZED.
  } ELSE {
    PRINT "TYPE: " + THING:TYPENAME + " IS NOT RECOGNIZED".
  }
}

DECLARE FUNCTION COMPASS_FOR {
    PARAMETER VES IS SHIP.
    PARAMETER VEC IS "NONE".
    LOCAL POINTING TO VES:FACING:FOREVECTOR.
    IF NOT (VEC="NONE") {
        SET POINTING TO TO_UNIT_VECTOR(VEC).
    }
    LOCAL EAST TO VCRS(VES:UP:VECTOR, VES:NORTH:VECTOR).
    LOCAL TRIG_X TO VDOT(VES:NORTH:VECTOR, POINTING).
    LOCAL TRIG_Y TO VDOT(EAST, POINTING).

    LOCAL RESULT TO ARCTAN2(TRIG_Y, TRIG_X).
    IF RESULT < 0 {
        RETURN 360 + RESULT.
    } ELSE {
        RETURN RESULT.
    }
}

DECLARE FUNCTION PITCH_FOR {
    PARAMETER VES IS SHIP.
    PARAMETER VEC IS "NONE".
    LOCAL POINTING TO VES:FACING:FOREVECTOR.
    IF NOT (VEC="NONE") {
        SET POINTING TO TO_UNIT_VECTOR(VEC).
    }
    RETURN 90 - VANG(VES:UP:VECTOR, POINTING).
}

DECLARE FUNCTION ROLL_FOR {
    PARAMETER VES IS SHIP.
    LOCAL TRIG_X TO VDOT(POINTING:TOPVECTOR,VES:UP:VECTOR).
    IF ABS(TRIG_X) < 0.0035 {
        RETURN 0.
    } ELSE {
        LOCAL VEC_Y TO VCRS(VES:UP:VECTOR,VES:FACING:FOREVECTOR).
        LOCAL TRIG_Y TO VDOT(POINTING:TOPVECTOR,VEC_Y).
        RETURN ARCTAN2(TRIG_Y,TRIG_X).
    }
}

DECLARE FUNCTION GET_SELECTED_WAYPOINT {
    FOR WAYPOINT IN ALLWAYPOINTS() {
        IF WAYPOINT:ISSELECTED() {
            RETURN WAYPOINT.
        }
    }
    PRINT "NO WAYPOINT SELECTED".
    RETURN "NONE".
}

DECLARE FUNCTION AUTODRIVE_TO_WAYPOINT {
    PARAMETER MAX_SPEED.

    BRAKES OFF.
    SET WAYPOINT TO GET_SELECTED_WAYPOINT().
    IF WAYPOINT="NONE" {
        RETURN.
    }
    CLEARSCREEN.
    SET TVAL TO 0.
    SET BEARING TO COMPASS_FOR(SHIP, WAYPOINT).
    LOCK THROTTLE TO TVAL.
    LOCK STEERING TO HEADING(BEARING, 0).
    UNTIL WAYPOINT:POSITION:MAG < 300 {
        SET BEARING TO COMPASS_FOR(SHIP, WAYPOINT).
        SET TVAL TO MAX(0, (MAX_SPEED - SHIP:GROUNDSPEED)/MAX_SPEED).
        PRINT "BEARING: " + BEARING AT (5, 2).
        PRINT "TVAL: " + TVAL AT (5, 3).
        PRINT "DISTANCE: " + WAYPOINT:POSITION:MAG() AT (5, 4).
    }
    BRAKES ON.
}

DECLARE FUNCTION AUTOPILOT {
    PARAMETER HEADING.
    PARAMETER HEIGHT.
    // TODO
}
